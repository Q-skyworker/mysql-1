分库分表：在海量数据下，解决单台数据库的储存压力-------同一张注册信息表上放不下------查询压力大
定义：通过某种特定条件,将存放在一个数据库 ( 主机 ) 中的数据,分散存放到多个数据库 ( 主机 ) 中。

分库分表的类新：
1.垂直分割（纵向）：按照数据列（字段）切分，把单一的表,拆分成多个表,并分散到不同的数据库( 主机 ) 上。
2.水平分割：简单来说,就是按照数据行切分,将表中的某些行存储到指定的数据库 ( 主机 ) 中

分库软件：
mycat(中间件)：是基于 Java 的分布式数据库系统中间层,为高并发下的分布式提供解决方案---------------同maxscale
可以作负载均衡，高可用，数据分片，读写分离
--------------------------------------------------------------------------
适用于：数据大量写入的存储需求。但查询的速度会变慢。
访问数据的分片规则：       
                             |------------------------> 1库
客户端--------->mycat------|(分片规则)
                             |------------------------> 2库

分片规则实现水平分割或垂直分割

#######################################################

MYCAT服务
步骤：
1.配置分片服务器
装包mycat
– bin     mycat 命令 如 启动 停止 等
– catlet  扩展功能
– conf    配置文件
– lib     mycat 使用的 jar 包 mycat 是 java 开发的,
– log     mycat 启动日志和运行日志
– wrapper.log mycat 服务启动日志 ,启动有问题可以看这个日志的内容
– mycat.log 记录 sql 脚本执行后的具体报错内容
**********************************************************
分片规则
• mycat 服务提供 10 种分片规则。
– 1 枚举法 sharding-by-intfile
– 2 固定分片 rule1
– 3 范围约定 auto-sharding-long
– 4 求模法 mod-long
– 5 日期列分区法 sharding-by-date
– 6 通配取模 sharding-by-pattern
– 7ASCII 码求模通配 sharding-by-prefixpattern
– 8 编程指定 sharding-by-substring
– 9 字符串拆分 hash 解析 sharding-by-stringhash
– 10 一致性 hash sharding-by-murmur

******************************************************


重要的文件/conf/：
— rule.xml-----规则：一个分片规则对应一个算法
– server.xml      设置连接 mycat 服务的账号 、密码等
– schema.xml     配置 mycat 使用的真实数据库和表



2. 修改配置文件
2.1定义连接mycat服务的用户密码与虚拟库名称
server.xml:
test test TESTDB  --只读
user user TESTDB  --读写
2.2对那些表作数据分片及使用的分片规则

schema.xml --逻辑表名  使用的分片规则  存储到那个数据库  dn1 dn2
*********************************************************************************
指定dn1--的库名---db1

<schema name="TESTDB" checkSQLschema="false" sqlMaxLimit="100">
------TESTDB是虚拟库---不存在
    <table name="travelrecord" dataNode="dn1,dn2" rule="auto-sharding-long" />

-------name:表名--存在，datenode:描述所在有几个分库（名字）rule:分片规则
      。。。。。。。。。。。。。。
  </schema>
***********************************************************************************
指定dn2--的库名---db2

 <dataNode name="dn1" dataHost="c1" database="db1" />  
------------分库名/主机名：/database:在两个库中创建对应的这个名字的库db1
*************************************************************************************
指定dn1,dn2对应的数据库服务器55，54

 <dataHost name="c1" maxCon="1000" minCon="10" balance="0"  ------数据分库的主机c1配置,指定数据库服务器-----填写信息与IP
                         <writeHost host="hostM1" url="192.168.4.55:3306" user="root"  ----user授权一个用户与密码
                         password="123456">
 </dataHost>

*************************************************************************************
1根据配置在指定数据库上的授权用户，密码
2保证54,55下都有db1,db2
----------------------------------------------------------------------------------------------------------------------------
3.启动服务
4.查看服务信息
5.测试
客户端访问代理机
 mysql -h192.168.4.56 -P8066 -utest -ptest
TESTDB----用户是server.xml中的test

+----------+
| DATABASE |
+----------+
| TESTDB   |



创建表格，符合格式要求
枚举：sharding_id=10000往第一台存，10010存第二台

一主多从：怎么分配查询请求
 
200T 的数据先完全备份----》拷贝------>数据分片拆分成两部
1完全备份---------|_____和到一起。
2.完全备份-------|
   

MHA集群的配置步骤：
环境：一主多从（其中有3台作主库，并开半同步复制），[全同步，异步模式，半同步模式]
配置MHA集群
配置数据节点51-55安装MHA_node
配置节点56安装MHA_node MHA_manager
修改管理主机的主配置文件
app1.cnf
管理主机的配置[server数字]
测试配置文件：ssh无密码登陆 主从同步，启动服务

测试集群
把当前的主库当即停止服务此时客户依然可以访问vip地址，连接数据库服务器

MHA-----排错思路：
查看相关报错文件：
配置文件----主从环境-------是否少装包


